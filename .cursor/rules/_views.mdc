---
description: Details the frontend JavaScript stack, Stimulus controllers, CSS structure, and asset bundling. ---
globs:
alwaysApply: false
---
# Frontend (JavaScript & CSS)

## Core Stack

*   **Hotwire:** Turbo Drive for page navigation, Turbo Frames for partial updates (e.g., editing course sections in `instructor/programming_courses/show.html.haml` and `edit.html.haml`), Stimulus for JS controllers.
*   **Stimulus:** Controllers in `app/javascript/controllers/` manage dynamic UI interactions. Registered in `index.js`.
*   **Tailwind CSS:** Utility-first CSS framework. Configured in `tailwind.config.js`, main input `app/assets/tailwind/application.css`, output `app/assets/builds/application.css`.
*   **Bun:** Used for JavaScript dependency management (`package.json`) and bundling (`bun.config.js`).

## CSS Structure

*   **Tailwind:** Main framework, configured via `tailwind.config.js`. Build process defined in `package.json` (`build:css` script).
*   **`app/assets/tailwind/application.css`:** Main input file for Tailwind. Imports base Tailwind styles and includes custom styles (e.g., sidebar hover transitions).
*   **`app/assets/stylesheets/actiontext.css`:** Customizations and overrides for the Trix editor and rendered ActionText content. Includes specific styles for headings, lists, code blocks, images, etc.
*   **`app/assets/stylesheets/ace-editor.css`:** Custom styling for the Ace Editor instances to match the application's look and feel (borders, focus rings, scrollbars, gutter). Includes the `ace-github-dark` theme.

## JavaScript Libraries

*   **`ace-builds`:** Core Ace editor library and specific modes/themes.
*   **`highlight.js`:** Core library and Ruby language support for syntax highlighting.
*   **`trix`:** The base Trix rich text editor library.
*   **`@rails/actiontext`:** Rails integration for Trix.
*   **`@hotwired/turbo-rails`:** Turbo integration.
*   **`@hotwired/stimulus`:** Stimulus framework.

## Asset Bundling

*   **JavaScript:** Managed and bundled by Bun using `bun.config.js`. Entry point is `app/javascript/application.js`, output is `app/assets/builds/application.js`. Watch mode support included in `bun.config.js`.
*   **CSS:** Processed by Tailwind CLI as defined in `package.json`. Input `app/assets/tailwind/application.css`, output `app/assets/builds/application.css`.
